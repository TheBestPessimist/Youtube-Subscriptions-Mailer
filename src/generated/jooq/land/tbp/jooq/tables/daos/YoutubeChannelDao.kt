/*
 * This file is generated by jOOQ.
 */
package land.tbp.jooq.tables.daos


import kotlin.collections.List

import land.tbp.jooq.tables.YoutubeChannel
import land.tbp.jooq.tables.records.YoutubeChannelRecord

import org.jooq.Configuration
import org.jooq.impl.DAOImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class YoutubeChannelDao(configuration: Configuration?) : DAOImpl<YoutubeChannelRecord, land.tbp.jooq.tables.pojos.YoutubeChannel, Long>(YoutubeChannel.YOUTUBE_CHANNEL, land.tbp.jooq.tables.pojos.YoutubeChannel::class.java, configuration) {

    /**
     * Create a new YoutubeChannelDao without any configuration
     */
    constructor(): this(null)

    override fun getId(o: land.tbp.jooq.tables.pojos.YoutubeChannel): Long? = o.youtubeChannelId

    /**
     * Fetch records that have <code>youtube_channel_id BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    fun fetchRangeOfYoutubeChannelId(lowerInclusive: Long?, upperInclusive: Long?): List<land.tbp.jooq.tables.pojos.YoutubeChannel> = fetchRange(YoutubeChannel.YOUTUBE_CHANNEL.YOUTUBE_CHANNEL_ID, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>youtube_channel_id IN (values)</code>
     */
    fun fetchByYoutubeChannelId(vararg values: Long): List<land.tbp.jooq.tables.pojos.YoutubeChannel> = fetch(YoutubeChannel.YOUTUBE_CHANNEL.YOUTUBE_CHANNEL_ID, *values.toTypedArray())

    /**
     * Fetch a unique record that has <code>youtube_channel_id = value</code>
     */
    fun fetchOneByYoutubeChannelId(value: Long): land.tbp.jooq.tables.pojos.YoutubeChannel? = fetchOne(YoutubeChannel.YOUTUBE_CHANNEL.YOUTUBE_CHANNEL_ID, value)

    /**
     * Fetch records that have <code>channel_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfChannelId(lowerInclusive: String?, upperInclusive: String?): List<land.tbp.jooq.tables.pojos.YoutubeChannel> = fetchRange(YoutubeChannel.YOUTUBE_CHANNEL.CHANNEL_ID, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>channel_id IN (values)</code>
     */
    fun fetchByChannelId(vararg values: String): List<land.tbp.jooq.tables.pojos.YoutubeChannel> = fetch(YoutubeChannel.YOUTUBE_CHANNEL.CHANNEL_ID, *values)

    /**
     * Fetch records that have <code>title BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfTitle(lowerInclusive: String?, upperInclusive: String?): List<land.tbp.jooq.tables.pojos.YoutubeChannel> = fetchRange(YoutubeChannel.YOUTUBE_CHANNEL.TITLE, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>title IN (values)</code>
     */
    fun fetchByTitle(vararg values: String): List<land.tbp.jooq.tables.pojos.YoutubeChannel> = fetch(YoutubeChannel.YOUTUBE_CHANNEL.TITLE, *values)
}
